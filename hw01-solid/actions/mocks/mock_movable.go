// Code generated by MockGen. DO NOT EDIT.
// Source: move.go

// Package mocks is a generated GoMock package.
package mocks

import (
	github.com/decentos/OtusDesignPatternsProject/hw01-solid/geometry"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMovable is a mock of Movable interface
type MockMovable struct {
	ctrl     *gomock.Controller
	recorder *MockMovableMockRecorder
}

// MockMovableMockRecorder is the mock recorder for MockMovable
type MockMovableMockRecorder struct {
	mock *MockMovable
}

// NewMockMovable creates a new mock instance
func NewMockMovable(ctrl *gomock.Controller) *MockMovable {
	mock := &MockMovable{ctrl: ctrl}
	mock.recorder = &MockMovableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMovable) EXPECT() *MockMovableMockRecorder {
	return m.recorder
}

// SetPosition mocks base method
func (m *MockMovable) SetPosition(v *geometry.Vector) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetPosition", v)
}

// SetPosition indicates an expected call of SetPosition
func (mr *MockMovableMockRecorder) SetPosition(v interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPosition", reflect.TypeOf((*MockMovable)(nil).SetPosition), v)
}

// GetPosition mocks base method
func (m *MockMovable) GetPosition() *geometry.Vector {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPosition")
	ret0, _ := ret[0].(*geometry.Vector)
	return ret0
}

// GetPosition indicates an expected call of GetPosition
func (mr *MockMovableMockRecorder) GetPosition() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPosition", reflect.TypeOf((*MockMovable)(nil).GetPosition))
}

// GetVelocity mocks base method
func (m *MockMovable) GetVelocity() *geometry.Vector {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVelocity")
	ret0, _ := ret[0].(*geometry.Vector)
	return ret0
}

// GetVelocity indicates an expected call of GetVelocity
func (mr *MockMovableMockRecorder) GetVelocity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVelocity", reflect.TypeOf((*MockMovable)(nil).GetVelocity))
}
